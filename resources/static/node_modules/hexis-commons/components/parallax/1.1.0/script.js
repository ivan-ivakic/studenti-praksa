App.parallax = {
  selector: '[data-parallax]',

  setup: function() {
    console.log('App.parallax.setup();');

    // Set up initial offset if element has one
    $(this.selector).each(function(){
      var offset = $(this).attr('data-parallaxOffset') || 0;
      $(this).css('marginTop', offset);
    });

    // Calculate initial positions
    this.calc();
  },

  calc: function(){
    console.log('App.parallax.calc();');
    $(this.selector).each(function(){

      // We calculate only if element is visible on the screen
      if( App.checkIfVisible($(this)) === true ){

        // Get new positions
        var el = $(this);
        var elOffset = $(this).offset().top;
        var direction = el.attr('data-parallax') || 'up';
        var speed = (el.attr('data-parallaxSpeed') || 0.1) / 100;

        // Calculate distance and direction
        var rawDistance = Math.round( ux.viewport.visible.to - elOffset );
        if ( direction === 'up' ) { var distance = -(rawDistance) * speed; }
        else { var distance = rawDistance * speed; }

        // Update the css
        el.css({
          '-webkit-transform': 'translate3d(0, ' + distance + 'px, 0)',
          '-moz-transform': 'translate3d(0, ' + distance + 'px, 0)',
          'transform': 'translate3d(0, ' + distance + 'px, 0)'
        });

      }
    });
  }
};


queue.documentLoad.push(function(){
  if (
    $('html').hasClass('transforms') &&
    $('html').hasClass('transitions') &&
    $(App.parallax.selector)[0]
  ){

    // Initial setup
    App.parallax.setup();

    // Recalculate position on scroll
    App.lightScroll(function(){
      App.parallax.calc();
    }, 25);

  }
});
