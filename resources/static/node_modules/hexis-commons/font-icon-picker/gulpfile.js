/*-------------------------------------------------------------------------------------------------
  Load modules
-------------------------------------------------------------------------------------------------*/
var fs = require('fs'),
    gulp = require('gulp'),
    sass = require('gulp-sass'),
    plumber = require('gulp-plumber'),
    iconfont = require('gulp-iconfont'),
    iconfontCss = require('gulp-iconfont-css'),
    data = require('gulp-data'),
    swig = require('gulp-swig'),
    toJson = require('gulp-to-json');


/*-------------------------------------------------------------------------------------------------
  Configuration
-------------------------------------------------------------------------------------------------*/
var path = {
  root: __dirname + '/',
  icons: __dirname + '/icons/',
  scss: __dirname + '/scss/',
  css: __dirname + '/css/',
  fonts: __dirname + '/font-all/',
}


/*-------------------------------------------------------------------------------------------------
  Default
-------------------------------------------------------------------------------------------------*/
gulp.task('default', [
  'create-json',
  'compile-css'
]);


/*-------------------------------------------------------------------------------------------------
  Generate icon fonts
-------------------------------------------------------------------------------------------------*/
gulp.task('read-icons', function() {

  return gulp.src(path.root + 'icons/**/*.svg')
    .pipe(require('gulp-filelist')('icons.json', { absolute: false }))
    .pipe(gulp.dest('.'))

});


/*-------------------------------------------------------------------------------------------------
  Generate icon fonts
-------------------------------------------------------------------------------------------------*/
gulp.task('create-json', ['read-icons'], function() {

  var icons = require('./icons.json');
  var outputJSON = '[';
  
  icons.forEach(function(element, i){
    var filename = element.substring(element.lastIndexOf('/')+1).slice(0, -4);
    icons[i] = filename;
    outputJSON += '\n  "'+filename+'",';
  });

  outputJSON = outputJSON.slice(0, -1);
  outputJSON += '\n]';

  fs.writeFile('./icons.json', outputJSON);

});


/*-------------------------------------------------------------------------------------------------
  Generate icon fonts
-------------------------------------------------------------------------------------------------*/
gulp.task('compile-fonts', function() {
  var fontName = 'hexis-icons';
  return gulp.src(path.root + 'icons/**/*.svg')
    .pipe(iconfontCss({
      fontName: fontName,
      path: path.scss + '/_template.scss',
      targetPath: '../scss/icons.scss',
      fontPath: '../font-all/',
    }))
    .pipe(iconfont({
      fontName: fontName,
      appendCodepoints: false,
      fontHeight: 1000,
      normalize: true
    }))
    .pipe(gulp.dest(path.fonts));
});


/*-------------------------------------------------------------------------------------------------
  Compile CSS
-------------------------------------------------------------------------------------------------*/
gulp.task('compile-css', ['compile-fonts'], function() {
  console.log('---------- Compiling CSS files...');
  gulp.src(path.scss + '**/*.scss')
    .pipe(sass({
      style: 'expanded',
      sync: true,
      errLogToConsole: true,
      includePaths: [
        path.root
      ]
    }))
    .pipe(gulp.dest(path.css));
});
